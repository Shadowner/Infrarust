name: Release Build

on:
  push:
    branches: [ main ]

jobs:
  check-release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'MAJOR') ||startsWith(github.event.head_commit.message, 'MINOR') || startsWith(github.event.head_commit.message, 'PATCH')
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version from Cargo.toml
        id: get-version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Create tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ steps.get-version.outputs.version }}"
          git push origin "v${{ steps.get-version.outputs.version }}"

  build-and-release:
    needs: check-release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Build
        run: cargo build --release
        
      - name: Rename binary
        shell: bash
        run: |
          cd target/release
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv infrarust.exe infrarust-${{ needs.check-release.outputs.version }}-windows.exe
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            mv infrarust infrarust-${{ needs.check-release.outputs.version }}-macos
          else
            mv infrarust infrarust-${{ needs.check-release.outputs.version }}-linux
          fi

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-release.outputs.version }}
          files: target/release/infrarust-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: check-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/infrarust:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/infrarust:${{ needs.check-release.outputs.version }}