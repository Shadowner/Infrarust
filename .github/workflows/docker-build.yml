name: Docker Multi-Arch Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (e.g., latest, v1.0.0, dev)'
        required: true
        default: 'latest'
  push:
    tags:
      - 'v*'
  workflow_call:
    inputs:
      tag:
        description: 'Docker image tag'
        required: true
        type: string

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Determine tags
        id: determine-tags
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAGS="${{ github.event.inputs.tag }}"
          elif [ "${{ github.event_name }}" = "workflow_call" ]; then
            TAGS="${{ inputs.tag }}"
          elif [ "${{ github.ref_type }}" = "tag" ]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            TAGS="${VERSION},latest"
          else
            TAGS="latest"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          build-args: |
            RUST_VERSION=1.87
            ALPINE_VERSION=3.21
          outputs: type=image,name=${{ secrets.DOCKERHUB_USERNAME }}/infrarust,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/infrarust:buildcache-${{ matrix.arch }}
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/infrarust:buildcache-${{ matrix.arch }},mode=max
      
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.arch }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Create multi-arch manifest
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Determine tags
        id: determine-tags
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAGS="${{ github.event.inputs.tag }}"
          elif [ "${{ github.event_name }}" = "workflow_call" ]; then
            TAGS="${{ inputs.tag }}"
          elif [ "${{ github.ref_type }}" = "tag" ]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            TAGS="${VERSION},latest"
          else
            TAGS="latest"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          TAGS="${{ steps.determine-tags.outputs.tags }}"
          IFS=',' read -ra TAG_ARRAY <<< "$TAGS"
          TAG_FLAGS=""
          for tag in "${TAG_ARRAY[@]}"; do
            TAG_FLAGS="$TAG_FLAGS -t ${{ secrets.DOCKERHUB_USERNAME }}/infrarust:$tag"
          done
          docker buildx imagetools create $TAG_FLAGS \
            $(printf '${{ secrets.DOCKERHUB_USERNAME }}/infrarust@sha256:%s ' *)
      
      - name: Inspect image
        run: |
          TAGS="${{ steps.determine-tags.outputs.tags }}"
          FIRST_TAG=$(echo "$TAGS" | cut -d',' -f1)
          docker buildx imagetools inspect ${{ secrets.DOCKERHUB_USERNAME }}/infrarust:$FIRST_TAG