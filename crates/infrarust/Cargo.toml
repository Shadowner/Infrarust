[package]
name = "infrarust"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true

description = "A Rust universal Minecraft proxy"
default-run = "infrarust"
readme = "../../README.md"
categories = ["network-programming", "command-line-utilities"]
keywords = ["networking", "proxy", "minecraft", "gameserver", "protocol"]


[features]
telemetry = [
    "dep:opentelemetry",
    "dep:opentelemetry_sdk",
    "dep:opentelemetry-appender-log",
    "dep:opentelemetry-stdout",
    "dep:opentelemetry-otlp",
    "dep:opentelemetry-semantic-conventions",
]
system-info = ["dep:sysinfo"]

[dependencies]
# Infrarust Libraries
infrarust_ban_system = { path = "../infrarust_ban_system", version = "1.3.1" }
infrarust_server_manager = { path = "../infrarust_server_manager", version = "1.3.1" }
infrarust_config = { path = "../infrarust_config", version = "1.3.1" }
infrarust_protocol = { path = "../infrarust_protocol", version = "1.3.1" }

# Async & Runtime
tokio = { workspace = true, features = ["full"] }
async-trait = { workspace = true }

# Logging & Telemetry
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "fmt"] }
tracing-opentelemetry = { workspace = true }
opentelemetry = { workspace = true, features = ["metrics"], optional = true }
opentelemetry_sdk = { workspace = true, features = [
    "metrics",
    "rt-tokio",
], optional = true }
opentelemetry-appender-log = { workspace = true, optional = true }
opentelemetry-stdout = { workspace = true, optional = true }
opentelemetry-otlp = { workspace = true, features = [
    "grpc-tonic",
    "trace",
    "metrics",
    "logs",
    "tokio",
], optional = true }
opentelemetry-semantic-conventions = { workspace = true, optional = true }

# Serialization & Data Formats
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
base64 = { workspace = true }
bytes = { workspace = true }

# Networking & Protocol
proxy-protocol = { workspace = true }
ipnetwork = { workspace = true }
reqwest = { workspace = true, features = [
    "json",
    "rustls-tls",
], default-features = false }

# Cryptography & Security
aes = { workspace = true }
cfb8 = { workspace = true }
rsa = { workspace = true }
rsa-der = { workspace = true }
rand = { workspace = true }
sha1 = { workspace = true }
hex = { workspace = true }

# Data Structures & Algorithms
num-bigint = { workspace = true }
num-traits = { workspace = true }
generic-array = { workspace = true }
xxhash-rust = { workspace = true, features = ["xxh64"] }

# System & Resource Management
sysinfo = { workspace = true, optional = true }
libdeflater = { workspace = true }

# Utility & Helper Libraries
uuid = { workspace = true, features = ["v4", "serde"] }
parking_lot = { workspace = true }
walkdir = { workspace = true }
wildmatch = { workspace = true }
notify = { workspace = true }
once_cell = { workspace = true }

# Error Handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# CLI & Configuration
clap = { workspace = true, features = ["derive"] }
chrono = { workspace = true }
futures = { workspace = true }
atty = { workspace = true }
bollard = { workspace = true }

[dev-dependencies]
tempfile = { workspace = true }

[[bin]]
name = "infrarust"
path = "src/bin/infrarust.rs"
